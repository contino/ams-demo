---
- hosts: localhost
  tasks:

  - name: common includes
    include: includes/common-includes.yml
    tags:
      - always

  # create cf template by passing it through Ansible template engine
  # be careful not to overdue the logic here else it may be harder to unwind should we want to move away from Ansible
  - name: generate cf template
    template:
      src: templates/cf.json
      dest: outputs/cf.json
    tags:
      - ams

  - name: validate template
    shell: |
      aws cloudformation validate-template --template-body file://outputs/cf.json {{ ams_profile_string }}
    tags:
      - validate

  - name: create a secret in aws
    include: includes/manage-secrets.yml
    vars:
      profile_string: "--profile {{ aws_profile }}"    
    tags:
      - secret
      - cf

  - name: create a CF stack in an actual AWS Account for fast feedback
    cloudformation:
      stack_name: "{{ app_name }}-{{ env }}-{{ epoch }}"
      state: present
      region: ap-southeast-2
      disable_rollback: 0
      template: outputs/cf.json
      template_parameters:
        VpcId: vpc-8bffaeef
        PrivSubnets: "subnet-fad2c89e,subnet-bcd6ddca"
        PrivSubnet: subnet-fad2c89e
        AppWebInstanceProfile: ec2-domain-join
        AppWebImageId: ami-01a281cc57627fd42 # Microsoft Windows Server 2016 Base
        Environment: "{{ env }}"
        Epoch: "{{ epoch }}"
      tags:
        Application: "{{ app_name }}"
        Owner: ContinoGreenTeam
        Contact: "{{ Contact }}"
        Project: CloudMigration
        Environment: "{{ env }}"
        Epoch: "{{ epoch }}"
      profile: "{{ aws_profile }}"
    tags:
      - cf

  - name: create a secret in ams
    include: includes/manage-secrets.yml
    vars:
      profile_string: "{{ ams_profile_string }}"
    tags:
      - secret
      - ams

  - name: upload startup script to s3
    include: includes/manage-startup.yml
    vars:
      profile_string: "{{ ams_profile_string }}"
    tags:
      - startup

  - name: Upload template to s3
    shell: |
      aws s3 cp outputs/cf.json s3://{{ s3_bucket }}/cf_{{ unique_key }}.json {{ ams_profile_string }}
    tags:
      - ams

  - name: Generate pre-signed file
    shell: |
      aws s3 presign --expires-in 3600 s3://{{ s3_bucket }}/cf_{{ unique_key }}.json {{ ams_profile_string }}
    register: cf_templated_presign    
    tags:
      - ams

  - name: set fact - S3 bucket URL
    set_fact:
     cf_template_url: "{{ cf_templated_presign.stdout }}"     

  - name: generate {{ app_prefix }} params file
    template:
      src: templates/exec-params_cfn-create.json
      dest: outputs/exec-params_cfn-create.json
    tags:
      - ams
      
  - name: Create the RFC > Create Stack {{ app_name }} in {{ env }} request_id {{ unique_key }}
    shell: |
      aws amscm create-rfc \
      --change-type-id ct-36cn2avfrrj9v --change-type-version "1.0" \
      --title "{{ app_name }} Stack in {{ env }} [request_id {{ unique_key }}]" \
      --execution-parameters "file://outputs/exec-params_cfn-create.json" --region us-east-1 {{ ams_profile_string }}
    register: rfc_id
    tags:
      - ams
      - ams_create

  - name: Include RFC Submit tasks
    include: includes/submit-rfc.yml